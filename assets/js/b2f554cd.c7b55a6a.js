"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"install-openwrt-in-pve-with-lxc","metadata":{"permalink":"/blog/install-openwrt-in-pve-with-lxc","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-08-01-install-openwrt-in-pve-with-lxc/2022-08-01-install-openwrt-in-pve-with-lxc.md","source":"@site/blog/2022-08-01-install-openwrt-in-pve-with-lxc/2022-08-01-install-openwrt-in-pve-with-lxc.md","title":"Install Openwrt in PVE with LXC","description":"Preface","date":"2022-08-01T00:00:00.000Z","formattedDate":"August 1, 2022","tags":[{"label":"openwrt","permalink":"/blog/tags/openwrt"},{"label":"PVE","permalink":"/blog/tags/pve"},{"label":"LXC","permalink":"/blog/tags/lxc"}],"readingTime":1.875,"hasTruncateMarker":false,"authors":[{"name":"Char ONE","title":"A boring guy","ulr":"https://rheatin.github.io","imageURL":"https://avatars.githubusercontent.com/u/20568588?v=4","key":"rheatin"}],"frontMatter":{"slug":"install-openwrt-in-pve-with-lxc","title":"Install Openwrt in PVE with LXC","authors":["rheatin"],"tags":["openwrt","PVE","LXC"]}},"content":"## Preface\\nThis artical is just a reminder for myself, not a tutorial. Hopefully it helps you too.\ud83d\ude04\\n\\nMy configuration is as below:\\n\\n| Accessory   | Type                            |\\n|:-----------:|:-------------------------------:|\\n| CPU         | Intel i7-6700                   |\\n| MOTHERBOARD | ASUS Z170 Pro Gaming            |\\n| NET ADAPTER | RTL 8125B(with 2 2.5G RJ45)     |\\n| DISKS       | Q200EX 480G,PM961A 256G,ZFS:1TB |\\n| SYSTEM      | PVE 7.2-4                       |\\n\\n## Steps\\n\\n### Create the LXC template\\n\\nHere I used is the **slim** release of [nanopi-openwrt](https://github.com/klever1988/nanopi-openwrt) made by **klever1988** for that it is simple enough but with the basic extensions installed(*e.g. FULLCONE, Argon Theme*).\\n\\n#### Enter in template folder with PVE shell.\\n\\n```shell\\ncd /var/lib/vz/template/cache/\\n```\\n\\n#### Download the firmware you like\\n\\n```shell\\nwget https://github.com/klever1988/nanopi-openwrt/releases/download/2022-07-08/x86-slim.img.gz\\n```\\n:::tip \\nIf the image you download is `rootfs.tar.gz`, you can jump to [Create the LXC container](#create-the-lxc-container).\\n:::\\n#### Mount all the partitions in this raw disk image\\n\\n```shell\\nkpartx -av x86-slim.img.gz \\n```\\n\\nUnder the `/dev/mapper`, there are 2 ***loopXpY***, one of this contains the Openwrt System.(*e.g. loop0p1*)\\n\\n#### Mount it to path `/mnt`\\n\\n```shell\\nmount /dev/mapper/loop0p1 /mnt\\n```\\n\\n#### Package \\nPackage it to `rootfs.tar.gz`\\n\\n```shell\\ntar zcvf openwrt-x86-64-generic-rootfs.tar.gz /mnt/\\n```\\n\\n#### Unmount\\n\\n```shell\\numount /mnt\\nkpartx -d x86-slim.img.gz\\n```\\n\\n### Create the LXC container\\n\\n#### PVE CLI Commands\\n\\n```shell\\npct create <vmid> <ostemplate> [OPTIONS]\\n```\\n| Name | type | Description |\\n|:----:|:----|:------------|\\n| <kbd>vmid</kbd>| `integer`(**1-N**) | The (**unique**) ID of the VM |\\n| <kbd>ostemplate</kbd>| `string` | The OS template or backup file (`local:vztmpl/openwrt-x86-64-generic-rootfs.tar.gz`) |\\n\\n##### Options\\n\\n| Name | type | Description |\\n|:----:|:----|:------------|\\n| <kbd>--rootfs</kbd>| `storage`:`disksize` | Use volume as container root. |\\n| <kbd>--ostype</kbd>| `alpine` or `debian` etc. | OS type. |\\n| <kbd>--hostname</kbd>| `string` | Set a host name for the container. |\\n| <kbd>--arch</kbd>| `amd64`,`arm64`,`armhf`,`i386` | OS architecture type. |\\n| <kbd>--cores</kbd>| `integer`(**1-8192**) | The number of cores assigned |\\n| <kbd>--memory</kbd>| `integer`(**16-N**) | Amount of RAM for the VM in MB. |\\n| <kbd>--swap</kbd>| `integer`(**0-N**) | Amount of SWAP for the VM in MB. |\\n\\n:::tip PCT Commands\\nThe more detailed infomation about PVE is available at [PCT-DOCs](https://pve.proxmox.com/pve-docs/pct.1.html).\\n:::\\n\\n#### Initialize a LXC container\\n\\n```shell\\npct create 100 \\n    local:vztmpl/openwrt-x86-64-generic-rootfs.tar.gz\\n    --rootfs local-lvm:8 \\n    --ostype unmanaged \\n    --hostname openwrt \\n    --arch amd64 \\n    --cores 4 \\n    --memory 1024 \\n    --swap 0 \\n    -net0 bridge=vmbr1,name=eth1\\n```"}]}')}}]);